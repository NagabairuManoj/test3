name: Jenkins Pipeline

on:
  push:
    branches:
      - master

jobs:
  jenkins-pipeline:
    runs-on: ubuntu-latest
    environment: env3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

#       - name: Trigger Jenkins Pipeline
#         env:
#           JENKINS_URL: ${{ vars.JENKINS_URL }}
#           JENKINS_JOB: ${{ vars.JENKINS_JOB }}
#           JENKINS_TOKEN: ${{ vars.JENKINS_TOKEN }}
#           JENKINS_USERNAME: ${{ vars.JENKINS_USERNAME }}
#         run: |
#           curl -X POST -u "${JENKINS_USERNAME}:${JENKINS_TOKEN}" "${JENKINS_URL}/job/${JENKINS_JOB}/build" 
      - name: Wait for Jenkins Pipeline
        env:
          JENKINS_URL: ${{ vars.JENKINS_URL }}
          JENKINS_JOB: ${{ vars.JENKINS_JOB }}
          JENKINS_TOKEN: ${{ vars.JENKINS_TOKEN }}
          JENKINS_USERNAME: ${{ vars.JENKINS_USERNAME }}
        run: |
          while [[ "$(curl -s -u "${JENKINS_USERNAME}:${JENKINS_TOKEN}" "${JENKINS_URL}/job/${JENKINS_JOB}/lastBuild/api/json" | jq -r '.building')" == "true" ]]; do
              sleep 10
          done
      - name: Get Jenkins Pipeline Status
        env:
          JENKINS_URL: ${{ vars.JENKINS_URL }}
          JENKINS_JOB: ${{ vars.JENKINS_JOB }}
          JENKINS_TOKEN: ${{ vars.JENKINS_TOKEN }}
          JENKINS_USERNAME: ${{ vars.JENKINS_USERNAME }}
        run: |
          JENKINS_STATUS=$(curl -s -u "${JENKINS_USERNAME}:${JENKINS_TOKEN}" "${JENKINS_URL}/job/${JENKINS_JOB}/lastBuild/api/json" | jq -r '.result')
          if [[ "${JENKINS_STATUS}" == "SUCCESS" ]]; then
            echo "Jenkins pipeline succeeded."
            # Update GitHub check run status as successful
            # Use GitHub Checks API here
          else
            echo "Jenkins pipeline failed."
            # Update GitHub check run status as failed
            # Use GitHub Checks API here
          fi
